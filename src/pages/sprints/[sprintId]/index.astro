---
import SiteLayout from "@layouts/SiteLayout.astro";
import type { User } from "@myTypes/User";
import Card from "@components/Card.astro";
import DeleteButton from "@components/sprints/DeleteButton";
import { HoursGraph } from "@components/sprints/HoursGraph";

const { sprintId } = Astro.params;
const authToken = await Astro.locals.auth().getToken();
const response = await fetch(new URL(`/api/sprints/${sprintId}`, Astro.url), {
	headers: {
		Authorization: `Bearer ${authToken}`,
	},
});
const { sprint } = await response.json();
if (!sprint) {
	return Astro.redirect("/sprints");
}

// Format dates to be more readable
const startDate = new Date(sprint.startDate).toLocaleDateString("en-US", { month: "long", day: "numeric", year: "numeric" });
const endDate = new Date(sprint.endDate).toLocaleDateString("en-US", { month: "long", day: "numeric", year: "numeric" });

const statusColors: Record<string, string> = {
	active: "badge-success",
	completed: "badge-info",
	cancelled: "badge-error",
	planned: "badge-warning",
};
---

<SiteLayout title={`Sprint: ${sprint.name}`}>
	<div class="container mx-auto px-4 py-4 sm:py-8">
		<Card hasHoverEffect={false}>
			<div class="flex flex-col sm:flex-row justify-between items-start gap-4 sm:gap-6 mb-4 sm:mb-6">
				<div class="w-full sm:w-auto">
					<div class="flex flex-col sm:flex-row items-start sm:items-center gap-2 sm:gap-4">
						<h1 class="text-2xl sm:text-3xl font-bold text-gray-900 dark:text-white">{sprint.name}</h1>
						<div class="flex items-center gap-2">
							<span class="text-lg sm:text-xl">ðŸ“…</span>
							<span class="text-sm sm:text-base text-gray-600 dark:text-gray-400">{startDate} - {endDate}</span>
						</div>
					</div>
					<p class="text-sm sm:text-base text-gray-600 dark:text-gray-400 mt-2">{sprint.description}</p>
				</div>
				<div class="flex gap-2 items-center self-end sm:self-start">
					<div class={`badge ${statusColors[sprint.status]} badge-lg capitalize`}>
						{sprint.status}
					</div>
					{sprint.role === "admin" && <DeleteButton client:load sprintId={Number(sprintId)} authToken={authToken} />}
				</div>
			</div>

			<div class="divider my-2 sm:my-4"></div>

			<div class="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-8">
				<div class="space-y-4">
					<div>
						<h3 class="text-base sm:text-lg font-semibold text-gray-900 dark:text-white">ðŸ‘¥ Team Members</h3>
						<div class="mt-2 space-y-2">
							{
								sprint.members?.map((member: User) => (
									<div class="flex items-center gap-2">
										<div class="avatar placeholder">
											<div class="bg-neutral-focus text-neutral-content rounded-full w-6 sm:w-8">
												<img src={member.imageUrl} alt={member.name} />
											</div>
										</div>
										<span class="text-sm sm:text-base">{member.name}</span>
									</div>
								))
							}
						</div>
					</div>
				</div>
			</div>

			<div class="divider my-2 sm:my-4"></div>

			<div class="space-y-4 w-full">
				<div class="w-full">
					<h3 class="text-base sm:text-lg font-semibold text-gray-900 dark:text-white mb-4">ðŸ“Š Analytics</h3>
					<div class="grid grid-cols-1 gap-4 sm:gap-6 place-items-center w-full">
						<div class="w-full overflow-x-auto">
							<div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4 sm:gap-6 min-w-[300px]">
								<HoursGraph client:load />
								<HoursGraph client:load />
							</div>
						</div>
					</div>
				</div>
			</div>

			<div class="card-actions justify-end mt-4 sm:mt-6 space-x-2">
				<a href="/sprints" class="btn btn-sm sm:btn-md">Back to Sprints</a>
				<button class="btn btn-sm sm:btn-md btn-primary">Edit Sprint</button>
			</div>
		</Card>
	</div>
</SiteLayout>
