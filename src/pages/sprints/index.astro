---
import LayoutSidebar from "@layouts/LayoutSideBar.astro";
import SprintCard from "@components/sprints/SprintCard.astro";
import type { Sprint } from "@myTypes/Sprint";

// Get search params from URL
const searchParams = Astro.url.searchParams;
const search = searchParams.get('search') || '';
const status = searchParams.get('status') || 'All';
const startDate = searchParams.get('startDate') || '';
const endDate = searchParams.get('endDate') || '';

// Build API URL with search params
const apiUrl = new URL("/api/sprints", Astro.url);
if (search) apiUrl.searchParams.set('search', search);
if (status !== 'All') apiUrl.searchParams.set('status', status);
if (startDate) apiUrl.searchParams.set('startDate', startDate);
if (endDate) apiUrl.searchParams.set('endDate', endDate);

const response = await fetch(apiUrl, {
	headers: {
		"Authorization": `Bearer ${await Astro.locals.auth().getToken()}`
	}
});
const { sprints } = await response.json();

const statuses = ["All", "Active", "Completed", "Cancelled", "Planned"];
---

<LayoutSidebar title="Sprints Overview">
	<div class="bg-gradient-to-r from-slate-100 to-slate-200 dark:from-slate-900 dark:to-slate-800 text-slate-800 dark:text-slate-100 mb-20 p-4 lg:p-16 shadow-xl shadow-slate-200 dark:shadow-slate-900">
		<div class="p-4 border-2 border-gray-400 border-dashed rounded-lg dark:border-gray-700 mt-14">
			<div class="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
				<h1 class="text-3xl font-bold text-gray-900 dark:text-white">Sprints</h1>
				<a href="/sprints/create" class="text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-primary-600 dark:hover:bg-primary-700 focus:outline-none dark:focus:ring-primary-800">
					‚ú® Create Sprint
				</a>
			</div>

			<form class="mb-8 p-4 bg-white dark:bg-gray-800 rounded-lg shadow">
				<div class="grid grid-cols-1 md:grid-cols-4 gap-4">
					<div>
						<label for="search" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Search Sprint</label>
						<input 
							type="text" 
							id="search" 
							name="search"
							value={search}
							class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white" 
							placeholder="Search by name..."
						>
					</div>
					<div>
						<label for="status" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Status</label>
						<select 
							id="status" 
							name="status"
							class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
						>
							{statuses.map(s => (
								<option value={s} selected={s === status} class="capitalize">{s}</option>
							))}
						</select>
					</div>
					<div>
						<label for="startDate" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Date Range</label>
						<div class="flex items-center gap-2">
							<input 
								type="date" 
								id="startDate" 
								name="startDate"
								value={startDate}
								class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
							>
							<span class="text-gray-500 dark:text-gray-400">to</span>
							<input 
								type="date" 
								id="endDate" 
								name="endDate"
								value={endDate}
								class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
							>
						</div>
					</div>
					<div class="flex items-end w-full justify-end">
						<button type="submit" class="w-fit text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-primary-600 dark:hover:bg-primary-700 focus:outline-none dark:focus:ring-primary-800">
							üîç Search
						</button>
					</div>
				</div>
			</form>

			{sprints.length > 0 ? (
				<div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6">
					{sprints.map((sprint: Sprint) => (
						<SprintCard sprint={sprint} />
					))}
				</div>
			) : (
				<div class="text-center py-12 bg-white dark:bg-gray-800 rounded-lg shadow flex flex-col items-center justify-center">
					<h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">üîç No Sprints Found</h3>
					<p class="text-gray-500 dark:text-gray-400 mb-4">No sprints found with the given filters.</p>
				</div>
			)}
		</div>
	</div>
</LayoutSidebar>

<script>
	// Remove empty params and 'All' status before form submission
	document.querySelector('form')?.addEventListener('submit', (e) => {
		const form = e.target as HTMLFormElement;
		const formData = new FormData(form);
		
		for (const [key, value] of formData.entries()) {
			if (!value || (key === 'status' && value === 'All')) {
				const input = form.querySelector(`[name="${key}"]`) as HTMLInputElement;
				input.disabled = true;
			}
		}
	});
</script>
